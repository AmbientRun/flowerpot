[components.crops]
name = "crops"
description = "Component namespace related to the crops mod."

[components."crops::medium_crop_class"]
type = "Empty"
name = "MediumCropClass"
attributes = ["Debuggable", "Networked"]
description = "A tag for medium crop class entities."

[components."crops::model_prefab_path"]
type = "String"
name = "ModelPrefabPath"
attributes = ["Debuggable", "Networked"]
description = "The asset path to a model prefab to use for this crop class."

[components."crops::age"]
type = "U16"
name = "GrowthProgress"
attributes = ["Debuggable"]
description = "The age in growth ticks of this crop."

[components."crops::seed"]
type = "EntityId"
name = "Seed"
attributes = ["Debuggable"]
description = "The entity ID of the crop class that this crop reproduces into."

[components."crops::seeding_interval"]
type = "U16"
name = "SeedingInterval"
attributes = ["Debuggable"]
description = "The age between each attempt at seeding this crop."

[components."crops::next_growth_stage"]
type = "EntityId"
name = "NextGrowthStage"
attributes = ["Debuggable"]
description = """
The entity ID of the crop class that this crop grows into.
If null, then the crop is removed from the tile when it grows.
"""

[components."crops::next_growth_age"]
type = "U16"
name = "GrowthInterval"
attributes = ["Debuggable"]
description = "The age that this crop needs to reach to grow into its next growth stage."

[components."crops::medium_crop"]
type = "Empty"
name = "MediumCrop"
attributes = ["Debuggable"]
description = "A tag for instantiated medium crop entities."

[components."crops::medium_crop_occupants"]
type = { type = "Vec", element_type = "EntityId" }
name = "MediumCropOccupant"
attributes = ["Debuggable"]
description = """
A list of the medium crops occupying this chunk.
Each element may be null if there is no occupant.
"""

[components."crops::last_medium_crop_occupants"]
type = { type = "Vec", element_type = "EntityId" }
name = "MediumCropOccupant"
attributes = ["Debuggable"]
description = """
A list of the medium crops occupying this chunk during the last network update.
This is diffed against medium_crop_occupants to get new network updates.
"""

[components."crops::class"]
type = "EntityId"
name = "Class"
attributes = ["Debuggable"]
description = "A reference to the crop class that this crop is an instance of."

[messages.update_medium_crops]
name = "UpdateMediumCrops"
description = "Server-to-client batch update for the medium crops in a chunk."

[messages.update_medium_crops.fields]
chunk = "Ivec2"
crop_tiles = { type = "Vec", element_type = "U8" }
crop_classes = { type = "Vec", element_type = "EntityId" }
