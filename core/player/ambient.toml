[package]
id = "player"
name = "player"
version = "0.0.1"
content = { type = "Asset", schema = true, code = true, models = true }

[dependencies]
fauna = { path = "../fauna" }
map = { path = "../map" }

[components.loaded_chunks]
type = { type = "Vec", element_type = "Ivec2" }
name = "LoadedChunks"
attributes = ["Debuggable"]
description = "The list of chunk positions that this player currently has loaded."

[components.speed]
type = "F32"
name = "Speed"
attributes = ["Debuggable"]
description = "The speed of a player."

[components.direction]
type = "Vec2"
name = "Direction"
attributes = ["Debuggable"]
description = """
The velocity of a player, server-side and client-side.
NOT relative to player yaw.
Maximum length is clamped to 1.0, and use in conjunction with the speed
component to determine the actual player movement.
"""

[components.head_ref]
type = "EntityId"
name = "HeadRef"
attributes = ["Debuggable"]
description = """
A reference to this player's head entity. Used client-side only in order to
update the main camera's transform.
"""

[components.left_hand_ref]
type = "EntityId"
name = "LeftHandRef"
attributes = ["Debuggable"]
description = "A reference to this player's left hand entity."

[components.right_hand_ref]
type = "EntityId"
name = "RightHandRef"
attributes = ["Debuggable"]
description = "A reference to this player's right hand entity."

[components.owner_ref]
type = "EntityId"
name = "OwnerRef"
attributes = ["Debuggable"]
description = "A reference to the player that this entity is owned by."

[components.local_player_ref]
type = "EntityId"
name = "LocalPlayerRef"
attributes = ["Debuggable", "MaybeResource"]
description = "A resource referencing the local player's entity *once the player has joined the game*."

[components.tile_selection_ref]
type = "EntityId"
name = "TileSelectionRef"
attributes = ["Debuggable"]
description = "A reference to this player's tile selection."

[messages.UpdatePlayerAngle]
name = "UpdatePlayerAngle"
description = "Client-to-server message to update the client's player's angle."
fields = { pitch = "F32", yaw = "F32" }

[messages.UpdatePlayerDirection]
name = "UpdatePlayerDirection"
description = "Client-to-server message to update the client's player's direction."
fields = { direction = "Vec2" }
